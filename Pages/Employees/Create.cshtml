@page
@model ContosoUniversity.Pages.Employees.CreateModel

@{
    ViewData["Title"] = "Create";
    if (String.IsNullOrEmpty(Model.Login) || String.IsNullOrEmpty(Model.Manager))
        Response.Redirect("/Login/Login");
}

<h1>Create</h1>

<h4>Employee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Employee.LastName" class="control-label"></label>
                <input asp-for="Employee.LastName" class="form-control" />
                <span asp-validation-for="Employee.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Employee.FirstMidName" class="control-label"></label>
                <input asp-for="Employee.FirstMidName" class="form-control" />
                <span asp-validation-for="Employee.FirstMidName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Employee.EmpTeamDate" class="control-label"></label>
                <input asp-for="Employee.EmpTeamDate" class="form-control" />
                <span asp-validation-for="Employee.EmpTeamDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Employee.JobTitle" class="control-label"></label>
                <input asp-for="Employee.JobTitle" class="form-control" />
                <span asp-validation-for="Employee.JobTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <p>Personality type</p>
                <select name="Employee.PersonalityType">
                    <option value="">Select a type</option>
                    @{ string[] personalityTypes = { "ISTJ", "INFJ", "INTJ", "ENFJ", "ISTP", "ESFJ", "INFP", "ESFP", "ENFP", "ESTP", "ESTJ", "ENTJ", "INTP", "ISFJ", "ENTP", "ISFP" };
                        foreach (var personality in personalityTypes)
                        {
                        <option value="@(Html.Raw(personality))" name="Employee.PersonalityType">@(Html.Raw(personality))</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Employee.IsManager" class="control-label"></label>
                <input asp-for="Employee.IsManager" class="form-control" />
                <span asp-validation-for="Employee.IsManager" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Employee.Username" class="control-label"></label>
                <input asp-for="Employee.Username" class="form-control" />
                <span asp-validation-for="Employee.Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Employee.Password" class="control-label"></label>
                <input asp-for="Employee.Password" class="form-control" />
                <span asp-validation-for="Employee.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="table">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;

                                foreach (var team in Model.AssignedTeamDataList)
                                {
                                    if (cnt++ % 3 == 0)
                                    {
                                    @:</tr><tr>
                                    }
                                    @:<td>
                                        <input type="checkbox"
                                               name="selectedTeams"
                                               value="@team.TeamID"
                                               @(Html.Raw(team.Assigned ? "checked=\"checked\"" : "")) />
                                        @team.TeamID @:  @team.Title
                                    @:</td>
                                }
                            @:</tr>
                            }
                        </table>
                    </div>
                </div>
                <div class="form-group">
                    <div class="table">
                        <table>
                            <tr>
                                @{
                                    int cnt2 = 0;

                                    foreach (var questionnaire in Model.AssignedQuestionnaireDataList)
                                    {
                                        if (cnt2++ % 3 == 0)
                                        {
                                        @:</tr><tr>
                                        }
                                        @:<td>
                                            <input type="checkbox"
                                                   name="selectedQuestionnaires"
                                                   value="@questionnaire.QuestionnaireID"
                                                   @(Html.Raw(questionnaire.Assigned ? "checked=\"checked\"" : "")) />
                                            @questionnaire.QuestionnaireID @:  @questionnaire.Title
                                        @:</td>
                                    }
                                @:</tr>
                                }
                            </table>
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
